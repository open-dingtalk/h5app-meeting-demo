{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["dd","corpId","fetch","then","res","json","result","permission","requestAuthCode","onSuccess","axios","get","code","response","sessionStorage","setItem","data","userid","unionid","deptIdList","catch","error","alert","JSON","stringify","onFail","err","App","className","onClick","contact","complexPicker","title","multiple","limitTips","maxUsers","pickedUsers","pickedDepartments","disabledUsers","disabledDepartments","requiredUsers","requiredDepartments","appId","permissionType","responseUserOnly","startWithDepartmentId","deptIds","departments","userIds","users","map","user","emplId","unionId","getItem","url","method","headers","console","log","conferenceId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA6GAA,SAAS,WAUL,IAAIC,EACJC,MAAe,WACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAEHL,EAASK,EAAOA,OAAOL,OAEvBD,UAAWO,WAAWC,gBAAgB,CAElCP,OAAQA,EACRQ,UAAW,SAAUH,GAEjBI,IAAMC,IAAa,mBAAqBL,EAAOM,MAC1CT,MAAK,SAAAU,GAMFC,eAAeC,QAAQ,SAAUF,EAASG,KAAKV,OAAOW,QACtDH,eAAeC,QAAQ,UAAWF,EAASG,KAAKV,OAAOY,SACvDJ,eAAeC,QAAQ,SAAUF,EAASG,KAAKV,OAAOa,WAAW,OAiBpEC,OAAM,SAAAC,GACHC,MAAMC,KAAKC,UAAUH,QAKjCI,OAAQ,SAAUC,GACdJ,MAAMC,KAAKC,UAAUE,aAM1BC,MAjKf,WAmFI,OACI,qBAAKC,UAAU,MAAf,SAII,yBAAQA,UAAU,aAAlB,UACI,wBAAQC,QAvFE,WAElB7B,MAAO8B,QAAQC,cAAc,CACzBC,MAAO,2BACP/B,OAAQ,MACRgC,UAAU,EACVC,UAAW,qBACXC,SAAU,IACVC,YAAa,GACbC,kBAAmB,GACnBC,cAAe,GACfC,oBAAqB,GACrBC,cAAe,GACfC,oBAAqB,GACrBC,MAAO,IACPC,eAAgB,MAChBC,kBAAkB,EAClBC,sBAAuB,EACvBpC,UAAW,SAAUH,GACjBgB,MAAMC,KAAKC,UAAUlB,IACrB,IAAIwC,EAAUxC,EAAOA,OAAOyC,YACxBC,EAAU1C,EAAOA,OAAO2C,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAI7CC,GADSvC,eAAewC,QAAQ,UACtBxC,eAAewC,QAAQ,YAGjCtC,GAFSF,eAAewC,QAAQ,UAEzB,CACT,OAAUD,EACV,UAAa,mBACb,cAAiBP,EACjB,cAAiBE,IAGrBtC,IAAM,CACF6C,IAAc,WACdC,OAAQ,OACRxC,KAAMA,EACNyC,QAAS,CACL,eAAgB,sBAGnBtD,MAAK,SAAUU,GAEZ6C,QAAQC,IAAI9C,GACZC,eAAeC,QAAQ,eAAgBF,EAASG,KAAKV,OAAOsD,iBAG/DxC,OAAM,SAAUC,GACbqC,QAAQC,IAAItC,OAIxBI,OAAQ,SAAUC,QAiCd,sCACA,wBAAQG,QA5BC,WAEjB,IAAMwB,EAAUvC,eAAewC,QAAQ,WACjCM,EAAe9C,eAAewC,QAAQ,gBAG5C5C,IAAM,CACF6C,IAAc,yBAA2BK,EAAe,YAAcP,EACtEG,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBtD,MAAK,SAAUU,OAGfO,OAAM,SAAUC,GACbqC,QAAQC,IAAItC,OAWZ,4CCvFDwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6e906e91.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\";\n\nfunction App() {\n\n    const createMeeting = () => {\n\n        dd.biz.contact.complexPicker({\n            title: \"测试标题\",            //标题\n            corpId: \"xxx\",              //企业的corpId\n            multiple: true,            //是否多选\n            limitTips: \"超出了\",          //超过限定人数返回提示\n            maxUsers: 1000,            //最大可选人数\n            pickedUsers: [],            //已选用户\n            pickedDepartments: [],          //已选部门\n            disabledUsers: [],            //不可选用户\n            disabledDepartments: [],        //不可选部门\n            requiredUsers: [],            //必选用户（不可取消选中状态）\n            requiredDepartments: [],        //必选部门（不可取消选中状态）\n            appId: 158,              //微应用Id，企业内部应用查看AgentId\n            permissionType: \"xxx\",          //可添加权限校验，选人权限，目前只有GLOBAL这个参数\n            responseUserOnly: false,        //返回人，或者返回人和部门\n            startWithDepartmentId: 0,   //仅支持0和-1\n            onSuccess: function (result) {\n                alert(JSON.stringify(result))\n                let deptIds = result.result.departments;\n                let userIds = result.result.users.map(user => user.emplId);\n\n                // 获取存储的用户部门和ID\n                const userId = sessionStorage.getItem('userId');\n                const unionId = sessionStorage.getItem('unionId');\n                const deptId = sessionStorage.getItem('deptId');\n                // demo直接构建了要请求的数据，实际开发需要从页面获取\n                const data = {\n                    \"userId\": unionId,\n                    \"confTitle\": \"会议Demo\",\n                    \"inviteDeptIds\": deptIds,\n                    \"inviteUserIds\": userIds\n                };\n                // 发起会议\n                axios({\n                    url: domain + '/meeting',\n                    method: 'post',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                    .then(function (response) {\n                        // alert(JSON.stringify(response));\n                        console.log(response);\n                        sessionStorage.setItem(\"conferenceId\", response.data.result.conferenceId);\n\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n\n            },\n            onFail: function (err) {\n            }\n        });\n\n    };\n\n    const closeMeeting = () => {\n        // 获取存储的用户部门和ID\n        const unionId = sessionStorage.getItem('unionId');\n        const conferenceId = sessionStorage.getItem('conferenceId');\n\n        // 关闭会议\n        axios({\n            url: domain + '/meeting?conferenceId=' + conferenceId + '&unionId=' + unionId,\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={createMeeting}>领用并提交审批</button>*/}\n            {/*</header>*/}\n            <header className=\"App-header\">\n                <button onClick={createMeeting}>发起会议</button>\n                <button onClick={closeMeeting}>关闭会议</button>\n            </header>\n            {/*<div className=\"container\">*/}\n            {/*    <List/>*/}\n            {/*</div>*/}\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // let corpId;\n    // axios.get(domain + \"/config\")\n    //     .then(response => {\n    //         corpId = response.data.corpId;\n    //     })\n    //     .catch(error => {\n    //         alert(JSON.stringify(error))\n    //         // console.log(error.message)\n    //     })\n    let corpId;\n    fetch(domain + '/config')\n        .then(res => res.json())\n        .then((result) => {\n            // alert(JSON.stringify(result));\n            corpId = result.result.corpId;\n            // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n            dd.runtime.permission.requestAuthCode({\n\n                corpId: corpId, //三方企业ID\n                onSuccess: function (result) {\n                    // alert(JSON.stringify(result));\n                    axios.get(domain + \"/login?authCode=\" + result.code)\n                        .then(response => {\n                            // alert(JSON.stringify(response));\n                            // alert(JSON.stringify(response.data));\n                            // alert(JSON.stringify(response.data.result.userid));\n                            // alert(JSON.stringify(response.data.result.deptIdList[0]));\n                            // 登录成功后储存用户部门和ID\n                            sessionStorage.setItem(\"userId\", response.data.result.userid);\n                            sessionStorage.setItem(\"unionId\", response.data.result.unionid);\n                            sessionStorage.setItem(\"deptId\", response.data.result.deptIdList[0]);\n                            // const qs = require('qs');\n                            // axios.get(domain + \"/users\", {\n                            //     params: {\n                            //         deptIds: response.data.result.deptIdList,\n                            //     },\n                            //     paramsSerializer: function (params) {\n                            //         return qs.stringify(params, {arrayFormat: 'repeat'});\n                            //     }\n                            // }).then(response => {\n                            //     console.log(response);\n                            //     // 此处为硬编码邀请人的unionid，可以使用response里面返回的数据\n                            //     sessionStorage.setItem(\"inviteUnionId\", \"***\");\n                            // }).catch(error => {\n                            //     alert(JSON.stringify(error));\n                            // })\n                        })\n                        .catch(error => {\n                            alert(JSON.stringify(error));\n                            // console.log(error.message)\n                        })\n\n                },\n                onFail: function (err) {\n                    alert(JSON.stringify(err))\n                }\n            });\n        });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}