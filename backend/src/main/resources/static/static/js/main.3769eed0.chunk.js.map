{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","agentId","corpId","timeStamp","nonceStr","signature","axios","get","encodeURIComponent","then","response","data","catch","error","alert","JSON","stringify","dd","type","jsApiList","permission","requestAuthCode","onSuccess","result","code","sessionStorage","setItem","userid","unionid","deptIdList","onFail","err","className","onClick","contact","complexPicker","title","multiple","limitTips","maxUsers","pickedUsers","pickedDepartments","disabledUsers","disabledDepartments","requiredUsers","requiredDepartments","appId","responseUserOnly","startWithDepartmentId","deptIds","departments","userIds","users","map","user","emplId","unionId","getItem","url","method","headers","console","log","conferenceId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3769eed0.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\";\n\nfunction App() {\n    let agentId, corpId, timeStamp, nonceStr, signature;\n    let url = \"http://wanzq.vaiwan.com/index.html\";\n    axios.get(domain + \"/config?url=\" + encodeURIComponent(url))\n        .then(response => {\n            agentId = response.data.data.agentId;\n            corpId = response.data.data.corpId;\n            timeStamp = response.data.data.timeStamp;\n            nonceStr = response.data.data.nonceStr;\n            signature = response.data.data.signature;\n        })\n        .catch(error => {\n            alert(JSON.stringify(error));\n            // console.log(error.message)\n        })\n\n    dd.config({\n        agentId: agentId, // 必填，微应用ID\n        corpId: corpId,//必填，企业ID\n        timeStamp: timeStamp, // 必填，生成签名的时间戳\n        nonceStr: nonceStr, // 必填，自定义固定字符串。\n        signature: signature, // 必填，签名\n        type: 0,   //选填。0表示微应用的jsapi,1表示服务窗的jsapi；不填默认为0。该参数从dingtalk.js的0.8.3版本开始支持\n        jsApiList: [\n            'runtime.info',\n            'biz.contact.choose',\n            'dd.biz.contact.complexPicker',\n            'device.notification.confirm',\n            'device.notification.alert',\n            'device.notification.prompt',\n            'biz.ding.post',\n            'biz.util.openLink',\n        ] // 必填，需要使用的jsapi列表，注意：不要带dd。\n    });\n\n    dd.ready(function () {\n        // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n        dd.runtime.permission.requestAuthCode({\n            corpId: corpId, //三方企业ID\n            onSuccess: function (result) {\n                // alert(JSON.stringify(result));\n                axios.get(domain + \"/login?authCode=\" + result.code)\n                    .then(response => {\n                        // alert(JSON.stringify(response));\n                        // alert(JSON.stringify(response.data));\n                        // alert(JSON.stringify(response.data.data.userid));\n                        // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                        // 登录成功后储存用户部门和ID\n                        sessionStorage.setItem(\"userId\", response.data.data.userid);\n                        sessionStorage.setItem(\"unionId\", response.data.data.unionid);\n                        sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                    })\n                    .catch(error => {\n                        alert(JSON.stringify(error));\n                        // console.log(error.message)\n                    })\n\n            },\n            onFail: function (err) {\n                alert(JSON.stringify(err))\n            }\n        });\n    });\n\n\n    const createMeeting = () => {\n\n        dd.biz.contact.complexPicker({\n            title: \"测试标题\",            //标题\n            // corpId: sessionStorage.getItem(\"corpId\"),              //企业的corpId\n            corpId: corpId,              //企业的corpId\n            multiple: true,            //是否多选\n            limitTips: \"超出了\",          //超过限定人数返回提示\n            maxUsers: 1000,            //最大可选人数\n            pickedUsers: [],            //已选用户\n            pickedDepartments: [],          //已选部门\n            disabledUsers: [],            //不可选用户\n            disabledDepartments: [],        //不可选部门\n            requiredUsers: [],            //必选用户（不可取消选中状态）\n            requiredDepartments: [],        //必选部门（不可取消选中状态）\n            // appId: sessionStorage.getItem(\"agentId\"),              //微应用Id，企业内部应用查看AgentId\n            appId: agentId,              //微应用Id，企业内部应用查看AgentId\n            // permissionType: \"xxx\",          //可添加权限校验，选人权限，目前只有GLOBAL这个参数\n            responseUserOnly: false,        //返回人，或者返回人和部门\n            startWithDepartmentId: 0,   //仅支持0和-1\n            onSuccess: function (result) {\n                alert(JSON.stringify(result))\n                let deptIds = result.data.departments;\n                let userIds = result.data.users.map(user => user.emplId);\n\n                // 获取存储的用户部门和ID\n                const userId = sessionStorage.getItem('userId');\n                const unionId = sessionStorage.getItem('unionId');\n                const deptId = sessionStorage.getItem('deptId');\n                // demo直接构建了要请求的数据，实际开发需要从页面获取\n                const data = {\n                    \"userId\": unionId,\n                    \"confTitle\": \"会议Demo\",\n                    \"inviteDeptIds\": deptIds,\n                    \"inviteUserIds\": userIds\n                };\n                // 发起会议\n                axios({\n                    url: domain + '/meeting',\n                    method: 'post',\n                    data: data,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                    .then(function (response) {\n                        // alert(JSON.stringify(response));\n                        console.log(response);\n                        sessionStorage.setItem(\"conferenceId\", response.data.data.conferenceId);\n\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n\n            },\n            onFail: function (err) {\n                alert(JSON.stringify(err));\n                console.log(JSON.stringify(err));\n            }\n        });\n\n    };\n\n    const closeMeeting = () => {\n        // 获取存储的用户部门和ID\n        const unionId = sessionStorage.getItem('unionId');\n        const conferenceId = sessionStorage.getItem('conferenceId');\n\n        // 关闭会议\n        axios({\n            url: domain + '/meeting?conferenceId=' + conferenceId + '&unionId=' + unionId,\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\">*/}\n            {/*<button onClick={createMeeting}>领用并提交审批</button>*/}\n            {/*</header>*/}\n            <header className=\"App-header\">\n                <button onClick={createMeeting}>发起会议</button>\n                <button onClick={closeMeeting}>关闭会议</button>\n            </header>\n            {/*<div className=\"container\">*/}\n            {/*    <List/>*/}\n            {/*</div>*/}\n        </div>\n    );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}